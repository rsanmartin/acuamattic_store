import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

String _appTheme = "primary";

/// Helper class for managing themes and colors.
class ThemeHelper {
  // A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Changes the app theme to [_newTheme].
  void changeTheme(String _newTheme) {
    _appTheme = _newTheme;
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: appTheme.gray50,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(
              17,
            ),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      dividerTheme: DividerThemeData(
        thickness: 1,
        space: 1,
        color: colorScheme.primary,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: appTheme.gray80099,
          fontSize: getFontSize(
            17,
          ),
          fontFamily: 'Arial',
          fontWeight: FontWeight.w400,
        ),
        bodyMedium: TextStyle(
          color: appTheme.gray40001,
          fontSize: getFontSize(
            15,
          ),
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.gray40001,
          fontSize: getFontSize(
            10,
          ),
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w400,
        ),
        displayMedium: TextStyle(
          color: appTheme.green400,
          fontSize: getFontSize(
            40,
          ),
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w400,
        ),
        headlineLarge: TextStyle(
          color: appTheme.black900,
          fontSize: getFontSize(
            32,
          ),
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w400,
        ),
        headlineMedium: TextStyle(
          color: appTheme.green400,
          fontSize: getFontSize(
            27,
          ),
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w400,
        ),
        headlineSmall: TextStyle(
          color: appTheme.green400,
          fontSize: getFontSize(
            24,
          ),
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w400,
        ),
        labelMedium: TextStyle(
          color: colorScheme.onPrimary,
          fontSize: getFontSize(
            11,
          ),
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w500,
        ),
        titleLarge: TextStyle(
          color: appTheme.indigoA100,
          fontSize: getFontSize(
            21,
          ),
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w400,
        ),
        titleMedium: TextStyle(
          color: colorScheme.primary,
          fontSize: getFontSize(
            16,
          ),
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w500,
        ),
        titleSmall: TextStyle(
          color: colorScheme.primary,
          fontSize: getFontSize(
            15,
          ),
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w500,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFF007AFF),
    primaryContainer: Color(0XFF242424),
    secondary: Color(0XFF242424),
    secondaryContainer: Color(0XFF8E8E93),
    tertiary: Color(0XFF242424),
    tertiaryContainer: Color(0XFF8E8E93),

    // Background colors
    background: Color(0XFF242424),

    // Surface colors
    surface: Color(0XFF242424),
    surfaceTint: Color(0XFF242424),
    surfaceVariant: Color(0XFF8E8E93),

    // Error colors
    error: Color(0XFF242424),
    errorContainer: Color(0XFF8E8E93),
    onError: Color(0XE8D9D7D7),
    onErrorContainer: Color(0XFF242424),

    // On colors(text colors)
    onBackground: Color(0XE8D9D7D7),
    onInverseSurface: Color(0XE8D9D7D7),
    onPrimary: Color(0XFF242424),
    onPrimaryContainer: Color(0XE8D9D7D7),
    onSecondary: Color(0XE8D9D7D7),
    onSecondaryContainer: Color(0XFF242424),
    onTertiary: Color(0XE8D9D7D7),
    onTertiaryContainer: Color(0XFF242424),

    // Other colors
    outline: Color(0XFF242424),
    outlineVariant: Color(0XFF242424),
    scrim: Color(0XFF242424),
    shadow: Color(0XFF242424),

    // Inverse colors
    inversePrimary: Color(0XFF242424),
    inverseSurface: Color(0XFF242424),

    // Pending colors
    onSurface: Color(0XE8D9D7D7),
    onSurfaceVariant: Color(0XFF242424),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Black
  Color get black900 => Color(0XFF000000);

  // BlueGray
  Color get blueGray400 => Color(0XFF888888);
  Color get blueGray900 => Color(0XFF363431);
  Color get blueGray90001 => Color(0XFF2B2B2B);

  // Gray
  Color get gray200 => Color(0XFFF0F0F0);
  Color get gray400 => Color(0XFFB3B3B3);
  Color get gray40001 => Color(0XFFAEAEAE);
  Color get gray50 => Color(0XFFF9F9F9);
  Color get gray50030 => Color(0X30AAAAAA);
  Color get gray5001 => Color(0XFFFBFBFB);
  Color get gray80099 => Color(0X993C3C43);

  // GrayCc
  Color get gray200Cc => Color(0XCCEDEDED);

  // Green
  Color get green400 => Color(0XFF4ECB71);

  // Indigo
  Color get indigoA100 => Color(0XFF7893F4);

  // LightBlue
  Color get lightBlueA400 => Color(0XFF00B2FF);

  // White
  Color get whiteA700 => Color(0XFFFFFFFF);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
